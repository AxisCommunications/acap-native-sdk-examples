name: Build vdo-larod-preprocessing Applications
on:
  push:
    paths:
      - "vdo-larod-preprocessing/**"
      - ".github/workflows/vdo-larod-preprocessing.yml"
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      RUN_FUNCTION_TEST: false
    steps:
      - uses: actions/checkout@v2

      - name: Login to dockerhub axis account
        run: docker login -u ${{ secrets.DOCKERHUB_USER }} --password ${{ secrets.DOCKERHUB_PASS }}

      - name: Configure axis proxy
        if: ${{ env.RUN_FUNCTION_TEST== 'true' }}
        run: |
          export DOCKER_CONFIG="$WORKSPACE/.docker"
          mkdir -p "$DOCKER_CONFIG"
          echo '{"proxies":{ "default":{"httpProxy": "http://wwwproxy.se.axis.com:3128", "httpsProxy": "http://wwwproxy.se.axis.com:3128"}}}' > "$DOCKER_CONFIG/config.json"

      - name: Build vdo-larod-preprocessing application to run on CPU
        run: |
          imagetag=vdo-larod-preprocessing-cpu:1.0
          docker image rm -f $imagetag
          cd vdo-larod-preprocessing
          cp app/manifest.json.cpu app/manifest.json
          docker build --no-cache --build-arg CHIP=cpu --tag $imagetag .
          docker cp $(docker create $imagetag):/opt/app ./build
          cd ..
          pwd
          mkdir -p vdo-larod-preprocessing/build_cpu_preprocessing/
          ls vdo-larod-preprocessing/build/
          cp vdo-larod-preprocessing/build/vdo_larod_preprocessing_cpu_1_0_0_armv7hf.eap vdo-larod-preprocessing/build_cpu_preprocessing/vdo_larod_preprocessing_cpu_1_0_0_armv7hf.eap
          ls vdo-larod-preprocessing/build_cpu_preprocessing/

      - name: Build vdo-larod-preprocessing application to run on TPU
        run: |
          imagetag=vdo-larod-preprocessing-tpu:1.0
          docker image rm -f $imagetag
          cd vdo-larod-preprocessing
          rm -rf build/
          cp app/manifest.json.edgetpu app/manifest.json
          docker build --no-cache --build-arg CHIP=edgetpu --tag $imagetag .
          docker cp $(docker create $imagetag):/opt/app ./build
          cd ..
          mkdir -p vdo-larod-preprocessing/build_tpu_preprocessing/
          cp vdo-larod-preprocessing/build/vdo_larod_preprocessing_edgetpu_1_0_0_armv7hf.eap vdo-larod-preprocessing/build_tpu_preprocessing/vdo_larod_preprocessing_edgetpu_1_0_0_armv7hf.eap
          ls vdo-larod-preprocessing/build_tpu_preprocessing/

      - name: Run functional tests
        if: ${{ env.RUN_FUNCTION_TEST== 'true' }}
        run: |
          export WORKSPACE=$(pwd)
          echo $WORKSPACE
          git clone "ssh://${{ secrets.GERRIT_SERVICE_USER }}@gittools.se.axis.com:29418/tests/atf/tart/recap.git"
          cd recap
          source /github-runner/github-runner/init/atf_init.sh
          ./test_starter.sh tpu_vdo_larod_preprocessing
          ls recap/output

      # Save functional test report as artifact
      - uses: actions/upload-artifact@master
        if: ${{ env.RUN_FUNCTION_TEST== 'true' }}
        with:
          name: Test report
          path: recap/recap/output/report.xml